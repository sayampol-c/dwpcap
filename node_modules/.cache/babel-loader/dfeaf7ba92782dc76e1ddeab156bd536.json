{"ast":null,"code":"var _jsxFileName = \"C:\\\\TEST-REACT-HR-APP\\\\my-mat-tab\\\\src\\\\StepperMaterial.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepButton from '@mui/material/StepButton';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { motion } from 'framer-motion';\nimport { makeStyles } from '@mui/styles';\nimport { keyframes } from '@mui/styled-engine';\nimport './App.css';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = ['PROJECT CAPABILITY', 'DISCIPLINES', 'PORTFOLIO CAPABILITY - LIFESTYLE', 'PORTFOLIO CAPABILITY - WORKPLACE', 'PORTFOLIO CAPABILITY - COMMUNITY'];\nconst useStyles = makeStyles({\n  mystyle: {\n    \"& .css-1u4zpwo-MuiSvgIcon-root-MuiStepIcon-root.Mui-active\": {\n      color: \"red\"\n    },\n    \"& .css-1u4zpwo-MuiSvgIcon-root-MuiStepIcon-root.Mui-completed\": {\n      color: \"green\"\n    },\n    \"& .MuiSvgIcon-root.MuiStepIcon-root.Mui-active.css-4ff9q7\": {\n      color: \"red !important\"\n    },\n    \"& .MuiSvgIcon-root.MuiStepIcon-root.Mui-completed.css-4ff9q7\": {\n      color: \"green !important\"\n    }\n  }\n});\nexport default function HorizontalNonLinearStepper(_ref) {\n  _s();\n\n  let {\n    setCurrentStep\n  } = _ref;\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState({});\n  console.log(' <<< activeStep >>> ', activeStep);\n  console.log(' <<< completed >>> ', completed);\n  console.log(' <<< steps >>> ', steps);\n  const classes = useStyles();\n\n  const totalSteps = () => {\n    return steps.length;\n  };\n\n  const completedSteps = () => {\n    return Object.keys(completed).length;\n  };\n\n  const isLastStep = () => {\n    return activeStep === totalSteps() - 1;\n  };\n\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps();\n  };\n\n  const handleNext = () => {\n    const newActiveStep = isLastStep() && !allStepsCompleted() ? // It's the last step, but not all steps have been completed,\n    // find the first step that has been completed\n    steps.findIndex((step, i) => !(i in completed)) : activeStep + 1;\n    console.log('before setActiveStep ', activeStep);\n    setActiveStep(newActiveStep);\n    setCurrentStep(newActiveStep);\n    console.log('after setActiveStep ', activeStep);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n    setCurrentStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleStep = step => () => {\n    setActiveStep(step);\n    setCurrentStep(step);\n  };\n\n  const handleComplete = () => {\n    const newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n    handleNext();\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setCompleted({});\n    setCurrentStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Stepper, {\n        nonLinear: true,\n        activeStep: activeStep,\n        alternativeLabel: true,\n        className: classes.mystyle,\n        children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n          completed: completed[index],\n          className: \"sam\",\n          children: /*#__PURE__*/_jsxDEV(StepButton, {\n            onClick: handleStep(index),\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: allStepsCompleted() ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 2,\n              mb: 1\n            },\n            children: \"All steps completed - you're finished\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'row',\n              pt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flex: '1 1 auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleReset,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 2,\n              mb: 1\n            },\n            children: [\"Step \", activeStep + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'row',\n              pt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              disabled: activeStep === 0,\n              onClick: handleBack,\n              sx: {\n                mr: 1\n              },\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flex: '1 1 auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleNext,\n              sx: {\n                mr: 1\n              },\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), console.log('sam'), activeStep !== steps.length && (completed[activeStep] ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                display: 'inline-block'\n              },\n              children: [\"Step \", activeStep + 1, \" already completed\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleComplete,\n              children: completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HorizontalNonLinearStepper, \"HAO0axJxYRxuXRHsqS2hwW98d4w=\", false, function () {\n  return [useStyles];\n});\n\n_c = HorizontalNonLinearStepper;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalNonLinearStepper\");","map":{"version":3,"sources":["C:/TEST-REACT-HR-APP/my-mat-tab/src/StepperMaterial.js"],"names":["React","Box","Stepper","Step","StepButton","Button","Typography","motion","makeStyles","keyframes","steps","useStyles","mystyle","color","HorizontalNonLinearStepper","setCurrentStep","activeStep","setActiveStep","useState","completed","setCompleted","console","log","classes","totalSteps","length","completedSteps","Object","keys","isLastStep","allStepsCompleted","handleNext","newActiveStep","findIndex","step","i","handleBack","prevActiveStep","handleStep","handleComplete","newCompleted","handleReset","width","map","label","index","mt","mb","display","flexDirection","pt","flex","mr"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepButton from '@mui/material/StepButton';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { motion } from 'framer-motion';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { keyframes } from '@mui/styled-engine';\r\nimport './App.css';\r\nimport './index.css';\r\n\r\n\r\nconst steps = ['PROJECT CAPABILITY', 'DISCIPLINES', 'PORTFOLIO CAPABILITY - LIFESTYLE', 'PORTFOLIO CAPABILITY - WORKPLACE', 'PORTFOLIO CAPABILITY - COMMUNITY'];\r\n\r\nconst useStyles = makeStyles({\r\n    mystyle :{\r\n             \r\n        \"& .css-1u4zpwo-MuiSvgIcon-root-MuiStepIcon-root.Mui-active\" : {\r\n            color: \"red\", \r\n         },\r\n        \"& .css-1u4zpwo-MuiSvgIcon-root-MuiStepIcon-root.Mui-completed\": {\r\n             color: \"green\", \r\n          },\r\n        \"& .MuiSvgIcon-root.MuiStepIcon-root.Mui-active.css-4ff9q7\" :{\r\n            color: \"red !important\", \r\n         },\r\n         \"& .MuiSvgIcon-root.MuiStepIcon-root.Mui-completed.css-4ff9q7\" :{\r\n            color: \"green !important\", \r\n         },        \r\n          \r\n    }\r\n    \r\n});\r\n\r\nexport default function HorizontalNonLinearStepper({setCurrentStep}) {\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState({});\r\n\r\n  console.log(' <<< activeStep >>> ',activeStep)\r\n  console.log(' <<< completed >>> ',completed)\r\n  console.log(' <<< steps >>> ',steps) \r\n\r\n  const classes = useStyles(); \r\n\r\n  \r\n\r\n  const totalSteps = () => {\r\n    return steps.length;\r\n  };\r\n\r\n  const completedSteps = () => {\r\n    return Object.keys(completed).length;\r\n  };\r\n\r\n  const isLastStep = () => {\r\n    return activeStep === totalSteps() - 1;\r\n  };\r\n\r\n  const allStepsCompleted = () => {\r\n    return completedSteps() === totalSteps();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? // It's the last step, but not all steps have been completed,\r\n          // find the first step that has been completed\r\n          steps.findIndex((step, i) => !(i in completed))\r\n        : activeStep + 1;\r\n        console.log('before setActiveStep ', activeStep);\r\n    setActiveStep(newActiveStep);\r\n    setCurrentStep(newActiveStep);\r\n    console.log('after setActiveStep ', activeStep);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    setCurrentStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStep = (step) => () => {\r\n    setActiveStep(step);\r\n    setCurrentStep(step);\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    const newCompleted = completed;\r\n    newCompleted[activeStep] = true;\r\n    setCompleted(newCompleted);\r\n    handleNext();\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n    setCompleted({});\r\n    setCurrentStep(0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <Box sx={{ width: '100%' }}>\r\n     \r\n      <Stepper nonLinear activeStep={activeStep} alternativeLabel \r\n         className={classes.mystyle}\r\n        >\r\n        {steps.map((label, index) => (\r\n          \r\n          <Step key={label} completed={completed[index]}  className=\"sam\" >\r\n          \r\n            <StepButton  onClick={handleStep(index)} >\r\n              {label}\r\n            </StepButton>\r\n           \r\n          </Step>\r\n          \r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n     \r\n        {allStepsCompleted() ? (\r\n          <React.Fragment>\r\n            <Typography sx={{ mt: 2, mb: 1 }}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n              <Box sx={{ flex: '1 1 auto' }} />\r\n              <Button onClick={handleReset}>Reset</Button>\r\n            </Box>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <Typography sx={{ mt: 2, mb: 1 }}>Step {activeStep + 1}</Typography>\r\n            <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n              <Button\r\n                color=\"inherit\"\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                sx={{ mr: 1 }}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Box sx={{ flex: '1 1 auto' }} />\r\n              <Button onClick={handleNext} sx={{ mr: 1 }}>\r\n                Next\r\n              </Button>\r\n              {console.log('sam')}\r\n              {activeStep !== steps.length &&\r\n                (completed[activeStep] ? (\r\n                  \r\n                  <Typography variant=\"caption\" sx={{ display: 'inline-block' }}>\r\n                    Step {activeStep + 1} already completed\r\n                  </Typography>\r\n                  \r\n                ) : (\r\n                  <Button onClick={handleComplete}>\r\n                    {completedSteps() === totalSteps() - 1\r\n                      ? 'Finish'\r\n                      : 'Complete Step'}\r\n                  </Button>\r\n                ))}\r\n            </Box>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    </Box>\r\n\r\n    </div>  \r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}