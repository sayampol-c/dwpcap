{"ast":null,"code":"var _jsxFileName = \"C:\\\\TEST-REACT-HR-APP\\\\my-mat-tab\\\\src\\\\Logingoogle.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport GoogleLogin from 'react-google-login';\nimport { Avatar, Grid, Paper } from '@material-ui/core';\nimport LockIcon from '@mui/icons-material/Lock';\nimport App from './App';\nimport { BrowserRouter as Router, Routes, Route, Navigate, Link, Outlet, useParams, NavLink, useNavigate, useLocation } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport '@fontsource/roboto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Logingoogle() {\n  _s();\n\n  let navigate = useNavigate();\n  const paperStyle = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItem: \"center\",\n    back\n  };\n  const upperHead = {\n    width: \"200px\",\n    margin: \"10px\"\n  };\n  const googleButtonStyle = {};\n\n  const responseGoogleSuccess = response => {\n    console.log(response);\n    console.log(response.profileObj);\n    console.log(response.tokenObj.token_type);\n    console.log(response.accessToken);\n    const tokenParam = response.accessToken;\n    navigate(\"/app\", {\n      state: tokenParam\n    });\n  };\n\n  const responseGoogleFailure = response => {\n    console.log('Error while Sign-in Google ' + response);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      elevation: 10,\n      style: paperStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: upperHead,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          children: /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Please Sign-in before using Capability and skills matrix application.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: googleButtonStyle,\n        children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"994206759077-5nqdmme5v15unlehpj8aeh84g7hjrt5h.apps.googleusercontent.com\",\n          buttonText: \"Sign in with Google\",\n          onSuccess: responseGoogleSuccess,\n          onFailure: responseGoogleFailure,\n          cookiePolicy: 'single_host_origin'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Logingoogle, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Logingoogle;\nexport default Logingoogle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logingoogle\");","map":{"version":3,"sources":["C:/TEST-REACT-HR-APP/my-mat-tab/src/Logingoogle.js"],"names":["React","GoogleLogin","Avatar","Grid","Paper","LockIcon","App","BrowserRouter","Router","Routes","Route","Navigate","Link","Outlet","useParams","NavLink","useNavigate","useLocation","Typography","Logingoogle","navigate","paperStyle","display","flexDirection","justifyContent","alignItem","back","upperHead","width","margin","googleButtonStyle","responseGoogleSuccess","response","console","log","profileObj","tokenObj","token_type","accessToken","tokenParam","state","responseGoogleFailure"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAqBC,KAArB,QAAiC,mBAAjC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,QAJJ,EAKIC,IALJ,EAMIC,MANJ,EAOIC,SAPJ,EAQIC,OARJ,EASIC,WATJ,EAUIC,WAVJ,QAWO,kBAXP;AAYA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAO,oBAAP;;;AAGA,SAASC,WAAT,GAAuB;AAAA;;AACnB,MAAIC,QAAQ,GAAGJ,WAAW,EAA1B;AACA,QAAMK,UAAU,GAAG;AAACC,IAAAA,OAAO,EAAE,MAAV;AAAiBC,IAAAA,aAAa,EAAE,QAAhC;AAAyCC,IAAAA,cAAc,EAAC,QAAxD;AAAiEC,IAAAA,SAAS,EAAC,QAA3E;AAAoFC,IAAAA;AAApF,GAAnB;AACA,QAAMC,SAAS,GAAG;AAACC,IAAAA,KAAK,EAAE,OAAR;AAAgBC,IAAAA,MAAM,EAAC;AAAvB,GAAlB;AACA,QAAMC,iBAAiB,GAAG,EAA1B;;AAEA,QAAMC,qBAAqB,GAAIC,QAAD,IAAc;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,UAArB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACI,QAAT,CAAkBC,UAA9B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACM,WAArB;AACA,UAAMC,UAAU,GAAGP,QAAQ,CAACM,WAA5B;AACAlB,IAAAA,QAAQ,CAAC,MAAD,EAAQ;AAACoB,MAAAA,KAAK,EAAED;AAAR,KAAR,CAAR;AAGH,GATD;;AAUA,QAAME,qBAAqB,GAAIT,QAAD,IAAc;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAgCF,QAA5C;AAGH,GAJD;;AAOF,sBACI,QAAC,IAAD;AAAA,2BAEK;AAAK,MAAA,SAAS,EAAE,EAAhB;AAAoB,MAAA,KAAK,EAAEX,UAA3B;AAAA,8BACK;AAAK,QAAA,KAAK,EAAEM,SAAZ;AAAA,gCACI,QAAC,MAAD;AAAA,iCAAQ,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,eAMK;AAAK,QAAA,KAAK,EAAEG,iBAAZ;AAAA,+BACI,QAAC,WAAD;AACI,UAAA,QAAQ,EAAC,0EADb;AAEI,UAAA,UAAU,EAAC,qBAFf;AAGI,UAAA,SAAS,EAAEC,qBAHf;AAII,UAAA,SAAS,EAAEU,qBAJf;AAKI,UAAA,YAAY,EAAE;AALlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAFL;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBD;;GA9CQtB,W;UACUH,W;;;KADVG,W;AAgDT,eAAeA,WAAf","sourcesContent":["import React from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport {Avatar, Grid,Paper} from '@material-ui/core';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\nimport App from './App';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route,\r\n    Navigate,\r\n    Link,\r\n    Outlet,\r\n    useParams,\r\n    NavLink,\r\n    useNavigate,\r\n    useLocation\r\n} from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport '@fontsource/roboto';\r\n\r\n\r\nfunction Logingoogle() {\r\n    let navigate = useNavigate();\r\n    const paperStyle = {display: \"flex\",flexDirection: \"column\",justifyContent:\"center\",alignItem:\"center\",back};\r\n    const upperHead = {width: \"200px\",margin:\"10px\"};\r\n    const googleButtonStyle = {};\r\n\r\n    const responseGoogleSuccess = (response) => {\r\n        console.log(response);\r\n        console.log(response.profileObj);\r\n        console.log(response.tokenObj.token_type); \r\n        console.log(response.accessToken);\r\n        const tokenParam = response.accessToken;\r\n        navigate(\"/app\",{state: tokenParam});\r\n        \r\n\r\n    };\r\n    const responseGoogleFailure = (response) => {\r\n        console.log('Error while Sign-in Google ' + response);\r\n        \r\n\r\n    };\r\n  \r\n\r\n  return (\r\n      <Grid>\r\n        \r\n           <div elevation={10} style={paperStyle}>\r\n                <div style={upperHead}>\r\n                    <Avatar><LockIcon /></Avatar>\r\n                    <Typography>Please Sign-in before using Capability and skills matrix application.</Typography>\r\n                </div>        \r\n                \r\n                <div style={googleButtonStyle}>\r\n                    <GoogleLogin\r\n                        clientId=\"994206759077-5nqdmme5v15unlehpj8aeh84g7hjrt5h.apps.googleusercontent.com\"\r\n                        buttonText='Sign in with Google'\r\n                        onSuccess={responseGoogleSuccess}\r\n                        onFailure={responseGoogleFailure}\r\n                        cookiePolicy={'single_host_origin'}\r\n                    />\r\n                </div>\r\n           </div> \r\n         \r\n      </Grid>\r\n    \r\n  )\r\n}\r\n\r\nexport default Logingoogle"]},"metadata":{},"sourceType":"module"}