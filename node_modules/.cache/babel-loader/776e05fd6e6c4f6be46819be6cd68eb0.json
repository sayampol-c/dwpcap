{"ast":null,"code":"var _jsxFileName = \"C:\\\\TEST-REACT-HR-APP\\\\my-mat-tab\\\\src\\\\Logingoogle.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport GoogleLogin from 'react-google-login';\nimport { Avatar, Grid, Paper } from '@material-ui/core';\nimport LockIcon from '@mui/icons-material/Lock';\nimport App from './App';\nimport { BrowserRouter as Router, Routes, Route, Navigate, Link, Outlet, useParams, NavLink, useNavigate, useLocation } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport '@fontsource/roboto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Logingoogle() {\n  _s();\n\n  let navigate = useNavigate();\n  const paperStyle = {\n    display: \"flex\",\n    flex: \"column\",\n    flexFlow: \"column wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#f2f2f2\",\n    width: \"300px\",\n    margin: \"auto\",\n    marginTop: \"10%\",\n    borderRadius: \"10px\"\n  };\n  const upperHead = {\n    margin: \"10% 10% 10% 10%\"\n  };\n  const googleButtonStyle = {\n    margin: \"10% 10% 10% 10%\"\n  };\n\n  const responseGoogleSuccess = response => {\n    console.log(response);\n    console.log(response.profileObj);\n    console.log(response.tokenObj.token_type);\n    console.log(response.accessToken);\n    const tokenParam = response.accessToken;\n    navigate(\"/app\", {\n      state: tokenParam\n    });\n  };\n\n  const responseGoogleFailure = response => {\n    console.log('Error while Sign-in Google ' + response);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(\"paper\", {\n      elevation: 10,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: paperStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: upperHead,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            children: /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Please Sign-in before using Capability and skills matrix application.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: googleButtonStyle,\n          children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n            clientId: \"994206759077-5nqdmme5v15unlehpj8aeh84g7hjrt5h.apps.googleusercontent.com\",\n            buttonText: \"Sign in with Google\",\n            onSuccess: responseGoogleSuccess,\n            onFailure: responseGoogleFailure,\n            cookiePolicy: 'single_host_origin'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Logingoogle, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Logingoogle;\nexport default Logingoogle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logingoogle\");","map":{"version":3,"sources":["C:/TEST-REACT-HR-APP/my-mat-tab/src/Logingoogle.js"],"names":["React","GoogleLogin","Avatar","Grid","Paper","LockIcon","App","BrowserRouter","Router","Routes","Route","Navigate","Link","Outlet","useParams","NavLink","useNavigate","useLocation","Typography","Logingoogle","navigate","paperStyle","display","flex","flexFlow","justifyContent","alignItems","backgroundColor","width","margin","marginTop","borderRadius","upperHead","googleButtonStyle","responseGoogleSuccess","response","console","log","profileObj","tokenObj","token_type","accessToken","tokenParam","state","responseGoogleFailure"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAqBC,KAArB,QAAiC,mBAAjC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,QAJJ,EAKIC,IALJ,EAMIC,MANJ,EAOIC,SAPJ,EAQIC,OARJ,EASIC,WATJ,EAUIC,WAVJ,QAWO,kBAXP;AAYA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAO,oBAAP;;;AAGA,SAASC,WAAT,GAAuB;AAAA;;AACnB,MAAIC,QAAQ,GAAGJ,WAAW,EAA1B;AACA,QAAMK,UAAU,GAAG;AAACC,IAAAA,OAAO,EAAE,MAAV;AAAiBC,IAAAA,IAAI,EAAE,QAAvB;AAAgCC,IAAAA,QAAQ,EAAC,aAAzC;AAAuDC,IAAAA,cAAc,EAAC,QAAtE;AAA+EC,IAAAA,UAAU,EAAC,QAA1F;AAAmGC,IAAAA,eAAe,EAAE,SAApH;AAA8HC,IAAAA,KAAK,EAAC,OAApI;AAA4IC,IAAAA,MAAM,EAAE,MAApJ;AAA2JC,IAAAA,SAAS,EAAC,KAArK;AAA2KC,IAAAA,YAAY,EAAC;AAAxL,GAAnB;AACA,QAAMC,SAAS,GAAG;AAACH,IAAAA,MAAM,EAAE;AAAT,GAAlB;AACA,QAAMI,iBAAiB,GAAG;AAACJ,IAAAA,MAAM,EAAC;AAAR,GAA1B;;AAGA,QAAMK,qBAAqB,GAAIC,QAAD,IAAc;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,UAArB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACI,QAAT,CAAkBC,UAA9B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACM,WAArB;AACA,UAAMC,UAAU,GAAGP,QAAQ,CAACM,WAA5B;AACArB,IAAAA,QAAQ,CAAC,MAAD,EAAQ;AAACuB,MAAAA,KAAK,EAAED;AAAR,KAAR,CAAR;AAGH,GATD;;AAUA,QAAME,qBAAqB,GAAIT,QAAD,IAAc;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAgCF,QAA5C;AAGH,GAJD;;AAOF,sBACI,QAAC,IAAD;AAAA,2BACM;AAAO,MAAA,SAAS,EAAE,EAAlB;AAAA,6BACI;AAAM,QAAA,KAAK,EAAEd,UAAb;AAAA,gCACI;AAAK,UAAA,KAAK,EAAEW,SAAZ;AAAA,kCACI,QAAC,MAAD;AAAA,mCAAQ,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,KAAK,EAAEC,iBAAZ;AAAA,iCACI,QAAC,WAAD;AACI,YAAA,QAAQ,EAAC,0EADb;AAEI,YAAA,UAAU,EAAC,qBAFf;AAGI,YAAA,SAAS,EAAEC,qBAHf;AAII,YAAA,SAAS,EAAEU,qBAJf;AAKI,YAAA,YAAY,EAAE;AALlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBD;;GA/CQzB,W;UACUH,W;;;KADVG,W;AAiDT,eAAeA,WAAf","sourcesContent":["import React from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport {Avatar, Grid,Paper} from '@material-ui/core';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\nimport App from './App';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route,\r\n    Navigate,\r\n    Link,\r\n    Outlet,\r\n    useParams,\r\n    NavLink,\r\n    useNavigate,\r\n    useLocation\r\n} from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport '@fontsource/roboto';\r\n\r\n\r\nfunction Logingoogle() {\r\n    let navigate = useNavigate();\r\n    const paperStyle = {display: \"flex\",flex: \"column\",flexFlow:\"column wrap\",justifyContent:\"center\",alignItems:\"center\",backgroundColor: \"#f2f2f2\",width:\"300px\",margin: \"auto\",marginTop:\"10%\",borderRadius:\"10px\"};\r\n    const upperHead = {margin: \"10% 10% 10% 10%\" };\r\n    const googleButtonStyle = {margin:\"10% 10% 10% 10%\"};\r\n    \r\n\r\n    const responseGoogleSuccess = (response) => {\r\n        console.log(response);\r\n        console.log(response.profileObj);\r\n        console.log(response.tokenObj.token_type); \r\n        console.log(response.accessToken);\r\n        const tokenParam = response.accessToken;\r\n        navigate(\"/app\",{state: tokenParam});\r\n        \r\n\r\n    };\r\n    const responseGoogleFailure = (response) => {\r\n        console.log('Error while Sign-in Google ' + response);\r\n        \r\n\r\n    };\r\n  \r\n\r\n  return (\r\n      <Grid>\r\n            <paper elevation={10} >\r\n                <div  style={paperStyle}>\r\n                    <div style={upperHead}>\r\n                        <Avatar><LockIcon /></Avatar>\r\n                        <Typography>Please Sign-in before using Capability and skills matrix application.</Typography>\r\n                    </div>        \r\n                    \r\n                    <div style={googleButtonStyle}>\r\n                        <GoogleLogin\r\n                            clientId=\"994206759077-5nqdmme5v15unlehpj8aeh84g7hjrt5h.apps.googleusercontent.com\"\r\n                            buttonText='Sign in with Google'\r\n                            onSuccess={responseGoogleSuccess}\r\n                            onFailure={responseGoogleFailure}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n                    </div>\r\n                </div> \r\n            </paper> \r\n      </Grid>\r\n    \r\n  )\r\n}\r\n\r\nexport default Logingoogle"]},"metadata":{},"sourceType":"module"}